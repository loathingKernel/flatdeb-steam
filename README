flatdeb
=======

flatdeb is a proof of concept for building Flatpak runtimes and apps
from Debian packages.

Walkthrough
-----------

On a Debian 9 VM:

    sensible-editor /etc/apt/sources.list    # and enable backports
    apt install debootstrap systemd-container time
    apt install python3 python3-debian python3-gi python3-yaml
    apt install -t stretch-backports flatpak flatpak-builder ostree

(Or install on Debian testing/unstable.)

Also install the latest versions of
[fakemachine](https://github.com/go-debos/fakemachine)
and [debos](https://github.com/go-debos/debos).

Make sure the VM's /tmp is large and mounted with the "dev" option,
and that its /var/tmp is large and supports extended attributes.

You need an apt-cacher-ng on http://192.168.122.1:3142 (currently
hard-coded) visible to the VM. If you don't have that, edit run.py
accordingly.

Also edit org.debian.packages.openarena.yaml to specify where you have
put local clones of ioquake3 and openarena if you can't (or don't
want to) clone them via https.

$HOME/.cache/flatdeb also needs to be made available via HTTP, at
http://192.168.122.1:3142/local/flatdeb (again currently hard-coded). A
convenient way to do this is to make it a symlink to a directory that is
exported via apt-cacher-ng's LocalDirs directive:

    $ cat /etc/apt-cacher-ng/local.conf
    LocalDirs: local /srv/acng/local
    $ ls -l ~/.cache/flatdeb
    lrwxrwxrwx ... /home/user/.cache/flatdeb -> /srv/acng/local/flatdeb

Finally, put a copy of debian-archive-keyring.gpg in this directory.

Then you can run:

    ./run.py --suite=stretch --arch=amd64 base
    ./run.py --suite=stretch --arch=amd64 runtimes \
        runtimes/net.debian.flatpak.Base.yaml
    ./run.py --suite=stretch --arch=amd64 runtimes \
        runtimes/net.debian.flatpak.Games.yaml
    ./run.py --suite=stretch --arch=amd64 app \
        apps/org.debian.packages.hello.yaml
    ./run.py --suite=stretch --arch=amd64 app \
        apps/org.debian.packages.openarena.yaml
    ./run.py --suite=stretch --arch=amd64 app \
        apps/org.debian.packages.mesa_utils.yaml

If you aren't root and don't have the ability to run `sudo`, use
`run-in-fakemachine` instead of `./run.py` for the `runtimes` steps.

On the same machine, or a test machine onto which you have copied
`$HOME/.cache/flatdeb/repo` with `rsync` or similar:

    flatpak --user remote-add --no-gpg-verify flatdeb $HOME/.cache/flatdeb/repo
    flatpak --user install flatdeb org.debian.packages.hello
    flatpak run org.debian.packages.hello
    flatpak --user install flatdeb org.debian.packages.openarena
    flatpak run org.debian.packages.openarena

Bonus content: Steam as a Flatpak, with multiarch
-------------------------------------------------

https://github.com/smcv/flatdeb-steam
