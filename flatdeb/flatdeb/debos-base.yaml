{{- $architecture := or .architecture "amd64" -}}
{{- /* Use a YAML list here */ -}}
{{- $components := or .components "" -}}
{{- $suite := or .suite "stretch" -}}
{{- $foreignarchs := or .foreignarchs "" -}}
{{- $mirror := or .mirror "http://deb.debian.org/debian" -}}
{{- $mergedusr := or .mergedusr "false" }}
{{- $keyring := or .keyring "" -}}
{{- $keyringpackage := or .keyringpackage "" -}}
{{- $build_id := or .build_id "" -}}
{{- $artifact_prefix := or .artifact_prefix (printf "base-%s-%s" $suite $architecture) -}}
{{- $ospack := or .ospack (printf "%s.tar.gz" $artifact_prefix) -}}

architecture: {{ $architecture }}

actions:
  # Make sure Ubuntu precise doesn't try to migrate /run
  - action: run
    label: create skeleton chroot
    command: |
      install -d "$ROOTDIR"
      install -d "$ROOTDIR/run"
      install -d "$ROOTDIR/var"
      ln -fns /run "$ROOTDIR/var/run"
      ln -fns /dev/shm "$ROOTDIR/run/shm"

  - action: debootstrap
    suite: {{ $suite }}
    {{ if $components }}
    components: {{ $components }}
    {{ end }}
    mirror: {{ $mirror }}
    {{ if $keyring }}
    keyring-file: {{ $keyring }}
    {{ else }}
    check-gpg: false
    {{ end }}
    {{ if $keyringpackage }}
    keyring-package: {{ $keyringpackage }}
    {{ end }}
    {{ if eq $mergedusr "after_debootstrap" }}
    merged-usr: false
    {{ else }}
    merged-usr: {{ $mergedusr }}
    {{ end }}
    variant: minbase
    # TODO: flatdeb has historically used a configurable
    # debootstrap_script, but debos doesn't support scripts other
    # than 'unstable'. Does the Debian script work for precise and
    # produce the same results as the 'precise' script?
    # https://github.com/go-debos/debos/issues/16

  - action: overlay
    source: suites/{{ $suite }}/overlay

  - action: run
    label: remove extra apt sources
    chroot: false
    command: 'rm -fr "$ROOTDIR/etc/apt/sources.list.d"'

  - action: run
    label: list apt configuration
    chroot: false
    command: 'find "$ROOTDIR/etc/apt" -ls'

  - action: apt
    recommends: false
    packages:
      - apt-transport-https
      {{ if $keyringpackage }}
      - {{ $keyringpackage }}
      {{ end }}

  - action: run
    label: disable-services
    chroot: false
    command: '"$RECIPEDIR/disable-services" "$ROOTDIR"'

  - action: run
    label: clean-up-base
    chroot: false
    command: '"$RECIPEDIR/clean-up-base" "$ROOTDIR"'

  {{ if eq $mergedusr "after_debootstrap" }}
  - action: run
    label: usrmerge
    chroot: false
    command: '"$RECIPEDIR/usrmerge" "$ROOTDIR"'
  {{ end }}

  {{ if $foreignarchs }}
  - action: run
    label: add-foreign-architectures
    chroot: false
    command: '"$RECIPEDIR/add-foreign-architectures" "$ROOTDIR" {{ $foreignarchs }}'
  {{ end }}

  - action: run
    label: apt update
    chroot: true
    command: 'apt-get -y -q update'

  - action: run
    label: apt dist-upgrade
    chroot: true
    command: 'DEBIAN_FRONTEND=noninteractive apt-get -y -q dist-upgrade'

  - action: run
    label: write-manifest
    chroot: false
    command: |
      "$RECIPEDIR/write-manifest" "$ROOTDIR"
      cp "$ROOTDIR/usr/manifest.dpkg" "$ARTIFACTDIR/{{ $artifact_prefix }}.manifest.dpkg"
      cp "$ROOTDIR/usr/manifest.dpkg.built-using" "$ARTIFACTDIR/{{ $artifact_prefix }}.manifest.dpkg.built-using"
      cp "$ROOTDIR/usr/manifest.deb822.gz" "$ARTIFACTDIR/{{ $artifact_prefix }}.manifest.deb822.gz"
      if test -e "$ROOTDIR/etc/os-release" && ! test -e "$ROOTDIR/usr/lib/os-release"; then
        rm -f "$ROOTDIR/usr/lib/os-release"
        mv "$ROOTDIR/etc/os-release" "$ROOTDIR/usr/lib/os-release"
        ln -fns ../usr/lib/os-release "$ROOTDIR/etc/os-release"
      fi
      if test -e "$ROOTDIR/usr/lib/os-release" && test -n "{{ $build_id }}"; then
        sed -n -i -e '/^BUILD_ID=/!p' "$ROOTDIR/usr/lib/os-release"
        echo 'BUILD_ID="{{ $build_id }}"' >> "$ROOTDIR/usr/lib/os-release"
        cp "$ROOTDIR/usr/lib/os-release" "$ARTIFACTDIR/{{ $artifact_prefix }}.os-release.txt"
      fi

  # No point in archiving these
  - action: run
    label: clean-up-before-pack
    chroot: false
    command: '"$RECIPEDIR/clean-up-before-pack" "$ROOTDIR"'

  - action: pack
    compression: gz
    file: {{ $ospack }}
