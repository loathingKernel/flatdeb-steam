#!/bin/bash

# Copyright © 2016-2017 Simon McVittie
# Copyright © 2017-2018 Collabora Ltd.
#
# SPDX-License-Identifier: MIT
#
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# "Software"), to deal in the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to
# the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
# CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
# TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

set -e
set -u
set -x
set -o pipefail

me="$(basename "$0")"

if [ "$#" != 1 ] || [ "$1" = '--help' ] || [ "x$(id -u)" != x0 ] ||
        ! [ -d "$1" ]; then
    echo "$me: Usage:" >&2
    echo "    $me SYSROOT" >&2
    echo "" >&2
    echo "Run this script as root." >&2
    exit 2
fi

sysroot="$1"
cd "$sysroot"

in_chroot () {
    chroot "$sysroot" "$@"
}

set_file_contents () {
    file="$1"
    permissions="${2-0644}"

    install -d "$sysroot/$(dirname "$file")"
    rm -f "$sysroot/$file"
    cat > "$sysroot/$file.dpkg-new"
    chmod "$permissions" "$sysroot/$file.dpkg-new"
    mv -f "$sysroot/$file.dpkg-new" "$sysroot/$file"
}

# There is some cleanup that we can do in the base
# tarball rather than in every runtime individually.
# See https://github.com/debuerreotype/debuerreotype
# for further ideas.

find "$sysroot/usr/share/doc" -xdev -not -name copyright -not -type d -delete
find "$sysroot/usr/share/doc" -depth -xdev -type d -empty -delete
rm -fr "$sysroot/usr/share/doc-base"
rm -fr "$sysroot/usr/share/groff"
rm -fr "$sysroot/usr/share/info"
rm -fr "$sysroot/usr/share/linda"
rm -fr "$sysroot/usr/share/lintian"
rm -fr "$sysroot/usr/share/man"

rm -f "$sysroot/var/log/apt/eipp.log.xz"
rm -f "$sysroot/var/log/bootstrap.log"
set_file_contents var/log/alternatives.log </dev/null
set_file_contents var/log/dpkg.log </dev/null

if [ -d "$sysroot/var/log/apt" ]; then
    set_file_contents var/log/apt/history.log </dev/null
    set_file_contents var/log/apt/term.log </dev/null
fi

# For license compliance, we should keep the copyright
# files intact
set_file_contents etc/dpkg/dpkg.cfg.d/flatpak-runtime <<EOF
force-unsafe-io
path-exclude /usr/share/doc/*/*
path-include /usr/share/doc/*/copyright
path-exclude /usr/share/doc-base/*
path-exclude /usr/share/groff/*
path-exclude /usr/share/info/*
path-exclude /usr/share/linda/*
path-exclude /usr/share/lintian/*
path-exclude /usr/share/man/*
EOF

set_file_contents etc/apt/apt.conf.d/flatpak-runtime <<EOF
Acquire::Languages "none";
Acquire::GzipIndexes "true";
Acquire::CompressionTypes::Order:: "gz";
DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };
APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };
Dir::Cache::pkgcache "";
Dir::Cache::srcpkgcache "";
# TODO: This doesn't seem to be working in precise,
# is it newer?
APT::InstallRecommends "false";
APT::AutoRemove::SuggestsImportant "false";
# We rely on autoremove not taking effect immediately
APT::Get::AutomaticRemove "false";
Aptitude::Delete-Unused "false";
EOF
